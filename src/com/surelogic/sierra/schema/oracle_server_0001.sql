
DROP VIEW FIXED_FINDINGS
<<>>
DROP VIEW RECENT_FINDINGS
<<>>
DROP VIEW CURRENT_FINDINGS
<<>>
DROP VIEW OLDEST_SCANS
<<>>
DROP VIEW LATEST_SCANS
<<>>

-- Displays the latest scan for each project/qualifier pair in the database.
CREATE VIEW LATEST_SCANS
  (QUALIFIER,PROJECT,SCAN_ID,SCAN_UUID,TIME)
AS SELECT 
   Q.NAME, P.NAME , R.ID, R.UUID, TIMES.TIME 
FROM QUALIFIER Q, SCAN R, PROJECT P,
   (
    SELECT QSR.QUALIFIER_ID AS QUALIFIER_ID,MAX(R2.SCAN_DATE_TIME) AS TIME
    FROM
        SCAN R2,
        QUALIFIER_SCAN_RELTN QSR,
        PROJECT P2
    WHERE
    	QSR.SCAN_ID = R2.ID AND
        P2.ID = R2.PROJECT_ID
    GROUP BY
        QSR.QUALIFIER_ID, P2.ID
   ) TIMES
WHERE R.SCAN_DATE_TIME = TIMES.TIME AND P.ID = R.PROJECT_ID AND Q.ID = TIMES.QUALIFIER_ID
<<>>

--Displays the oldest scan for each project in the database, as long as it isn't also the newest scan.
CREATE VIEW OLDEST_SCANS
  (QUALIFIER,PROJECT,SCAN_ID,SCAN_UUID,TIME)
AS SELECT 
   Q.NAME, P.NAME , R.ID, R.UUID, TIMES.TIME 
FROM QUALIFIER Q, SCAN R, PROJECT P,
   (
    SELECT QSR.QUALIFIER_ID AS QUALIFIER_ID,MIN(R2.SCAN_DATE_TIME) AS TIME
    FROM
        SCAN R2,
        QUALIFIER_SCAN_RELTN QSR,
        PROJECT P2
    WHERE
    	QSR.SCAN_ID = R2.ID AND
        P2.ID = R2.PROJECT_ID
    GROUP BY
        QSR.QUALIFIER_ID, P2.ID
   ) TIMES
WHERE R.SCAN_DATE_TIME = TIMES.TIME AND P.ID = R.PROJECT_ID AND Q.ID = TIMES.QUALIFIER_ID AND R.ID NOT IN (SELECT SCAN_ID FROM LATEST_SCANS)
<<>>
-- An overview of all findings in the database, by qualifier
CREATE TABLE TIME_SERIES_OVERVIEW (
  QUALIFIER_ID NUMBER        NOT NULL CONSTRAINT TSO_QUALIFIER_FK REFERENCES QUALIFIER (ID),
  FINDING_ID   NUMBER        NOT NULL CONSTRAINT TSO_FINDING_FK REFERENCES FINDING(ID) ON DELETE CASCADE,
  PROJECT_ID   NUMBER        NOT NULL CONSTRAINT TSO_PROJECT_FK REFERENCES PROJECT(ID),
  AUDITED      VARCHAR(3)    NOT NULL CONSTRAINT TSO_AUDITED_CN CHECK (AUDITED IN ('Yes','No')), -- Indicates whether someone has marked this finding as read
  LAST_CHANGED TIMESTAMP, -- The time the latest audit was applied to this finding
  IMPORTANCE   VARCHAR(10)   NOT NULL CONSTRAINT TSO_IMPORTANCE_CN CHECK (IMPORTANCE IN ('Irrelevant','Low','Medium','High','Critical')),
  AUDIT_COUNT  INTEGER       NOT NULL, -- The number of comments on this finding (Does not include changes to importance, or summary)
  PROJECT      VARCHAR(255)  NOT NULL,
  PACKAGE      VARCHAR(2000) NOT NULL,
  CLASS        VARCHAR(2000) NOT NULL,
  FINDING_TYPE VARCHAR(2000) NOT NULL,
  SUMMARY      VARCHAR(2000) NOT NULL
)
<<>>
CREATE INDEX TSO_AUDITED ON TIME_SERIES_OVERVIEW (AUDITED)
<<>>
CREATE INDEX TSO_LAST_CHANGED ON TIME_SERIES_OVERVIEW (LAST_CHANGED)
<<>>
CREATE INDEX TSO_IMPORTANCE ON TIME_SERIES_OVERVIEW (IMPORTANCE)
<<>>
CREATE INDEX TSO_PROJECT ON TIME_SERIES_OVERVIEW (PROJECT)
<<>>
CREATE INDEX TSO_PACKAGE ON TIME_SERIES_OVERVIEW (PACKAGE)
<<>>
CREATE INDEX TSO_CLASS ON TIME_SERIES_OVERVIEW (CLASS)
<<>>
CREATE INDEX TSO_FINDING_TYPE ON TIME_SERIES_OVERVIEW (FINDING_TYPE)
<<>>
CREATE INDEX TSO_AUDIT_COUNT ON TIME_SERIES_OVERVIEW (AUDIT_COUNT)
<<>>