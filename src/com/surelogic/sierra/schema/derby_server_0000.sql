-- DROP CLIENT CODE --
DROP VIEW PROJECT_OVERVIEW
<<>>
DROP VIEW FIXED_FINDINGS
<<>>
DROP VIEW RECENT_FINDINGS
<<>>
DROP VIEW CURRENT_FINDINGS
<<>>
DROP VIEW OLDEST_SCANS
<<>>
DROP VIEW LATEST_SCANS
<<>>
DROP TABLE SYNCH
<<>>
DROP TABLE FINDINGS_OVERVIEW
<<>>

-- SERVER CODE --
-- ----------------------------------------------
-- DDL Statements for tables
-- ----------------------------------------------
CREATE TABLE SITE_SETTINGS (SETTING_NAME VARCHAR(1024) NOT NULL, SETTING_VALUE VARCHAR(32672) NOT NULL)
<<>>
CREATE TABLE COMMIT_AUDITS (PROJECT_ID BIGINT NOT NULL, USER_ID BIGINT NOT NULL, REVISION BIGINT NOT NULL)
<<>>
CREATE TABLE DASHBOARD_SETTINGS (USER_ID BIGINT NOT NULL, ROW_NUM INTEGER NOT NULL, COL_NUM INTEGER NOT NULL, REPORT_SETTINGS_UUID CHAR(36), OUTPUT_TYPE INTEGER)
<<>>
CREATE TABLE GROUP_USER_RELTN (GROUP_ID BIGINT NOT NULL, USER_ID BIGINT NOT NULL)
<<>>
CREATE TABLE PROJECT_FILTERS (PROJECT_ID BIGINT NOT NULL, FINDING_TYPE_ID BIGINT NOT NULL, DELTA INTEGER, IMPORTANCE INTEGER, FILTERED CHAR(1))
<<>>
CREATE TABLE QUALIFIER (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), NAME VARCHAR(32672) NOT NULL)
<<>>
CREATE TABLE QUALIFIER_SCAN_RELTN (QUALIFIER_ID BIGINT NOT NULL, SCAN_ID BIGINT NOT NULL)
<<>>
CREATE TABLE REPORT_SETTINGS (UUID CHAR(36) NOT NULL, USER_ID BIGINT NOT NULL, REPORT_UUID VARCHAR(255) NOT NULL, TITLE VARCHAR(32672), DESCRIPTION VARCHAR(32672))
<<>>
CREATE TABLE REPORT_SETTINGS_PARAM (REPORT_SETTINGS_UUID CHAR(36) NOT NULL, PARAM_NAME VARCHAR(255) NOT NULL, PARAM_VALUE VARCHAR(32672) NOT NULL, ORDINAL INTEGER NOT NULL)
<<>>
CREATE TABLE REVISION (REVISION BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), DATE_TIME TIMESTAMP NOT NULL)
<<>>
CREATE TABLE SCAN_SUMMARY (SCAN_ID BIGINT NOT NULL, QUALIFIER_ID BIGINT NOT NULL, NEW_FINDINGS BIGINT NOT NULL, FIXED_FINDINGS BIGINT NOT NULL, UNCHANGED_FINDINGS BIGINT NOT NULL, TOTAL_FINDINGS BIGINT NOT NULL, ARTIFACT_COUNT BIGINT NOT NULL, LINES_OF_CODE BIGINT NOT NULL)
<<>>
CREATE TABLE SERVER (UUID CHAR(36) NOT NULL)
<<>>
CREATE TABLE SIERRA_GROUP (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), NAME VARCHAR(255) NOT NULL, INFO VARCHAR(32672))
<<>>
CREATE TABLE TIME_SERIES_EVENT (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), TIME_SERIES_ID BIGINT NOT NULL, NAME VARCHAR(32672) NOT NULL, DATE_TIME TIMESTAMP, DESCRIPTION VARCHAR(32672))
<<>>

-- ----------------------------------------------
-- DDL Statements for checks
-- ----------------------------------------------

ALTER TABLE SETTINGS ADD CONSTRAINT SETTINGS_UUID_CN CHECK (UUID IS NOT NULL)
<<>>
ALTER TABLE PROJECT_FILTERS ADD CONSTRAINT SETTINGS_FILTERED_FK CHECK (FILTERED IS NULL OR FILTERED IN ('Y'))
<<>>

-- ----------------------------------------------
-- DDL Statements for indexes
-- ----------------------------------------------

CREATE INDEX REVISION_DATE_INDEX ON REVISION (DATE_TIME)
<<>>
-- ----------------------------------------------
-- DDL Statements for keys
-- ----------------------------------------------

-- primary/unique
ALTER TABLE SITE_SETTINGS ADD CONSTRAINT SITE_SETTINGS_CN PRIMARY KEY (SETTING_NAME)
<<>>
ALTER TABLE COMMIT_AUDITS ADD CONSTRAINT SQL080815112503250 PRIMARY KEY (PROJECT_ID, USER_ID, REVISION)
<<>>
ALTER TABLE DASHBOARD_SETTINGS ADD CONSTRAINT SQL080904101515300 PRIMARY KEY (USER_ID, ROW_NUM, COL_NUM)
<<>>
ALTER TABLE GROUP_USER_RELTN ADD CONSTRAINT SQL080815112502560 PRIMARY KEY (GROUP_ID, USER_ID)
<<>>
ALTER TABLE QUALIFIER_SCAN_RELTN ADD CONSTRAINT SQL080815112459040 PRIMARY KEY (QUALIFIER_ID, SCAN_ID)
<<>>
ALTER TABLE REPORT_SETTINGS ADD CONSTRAINT SQL080820151402400 PRIMARY KEY (UUID)
<<>>
ALTER TABLE REPORT_SETTINGS_PARAM ADD CONSTRAINT SQL080820151402520 PRIMARY KEY (REPORT_SETTINGS_UUID, PARAM_NAME, ORDINAL)
<<>>
ALTER TABLE SCAN_SUMMARY ADD CONSTRAINT SQL080815112459840 PRIMARY KEY (SCAN_ID, QUALIFIER_ID)
<<>>
ALTER TABLE SERVER ADD CONSTRAINT SQL080815112459200 PRIMARY KEY (UUID)
<<>>
ALTER TABLE SIERRA_GROUP ADD CONSTRAINT SQL080815112502520 PRIMARY KEY (ID)
<<>>
ALTER TABLE SIERRA_GROUP ADD CONSTRAINT SQL080815112502521 UNIQUE (NAME)
<<>>
ALTER TABLE TIME_SERIES_EVENT ADD CONSTRAINT SQL080815112504170 PRIMARY KEY (ID)
<<>>
ALTER TABLE REVISION ADD CONSTRAINT SQL080815112459070 PRIMARY KEY (REVISION)
<<>>
ALTER TABLE QUALIFIER ADD CONSTRAINT SQL080815112459020 PRIMARY KEY (ID)
<<>>
ALTER TABLE QUALIFIER ADD CONSTRAINT SQL080815112459021 UNIQUE (NAME)
<<>>
-- foreign

ALTER TABLE COMMIT_AUDITS ADD CONSTRAINT COMMIT_AUDITS_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE COMMIT_AUDITS ADD CONSTRAINT COMMIT_AUDITS_USER_FK FOREIGN KEY (USER_ID) REFERENCES SIERRA_USER (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE COMMIT_AUDITS ADD CONSTRAINT COMMIT_AUDITS_REVISION_FK FOREIGN KEY (REVISION) REFERENCES REVISION (REVISION) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE REPORT_SETTINGS_PARAM ADD CONSTRAINT R_S_P_REPORT_SETTING_FK FOREIGN KEY (REPORT_SETTINGS_UUID) REFERENCES REPORT_SETTINGS (UUID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE REPORT_SETTINGS ADD CONSTRAINT REPORT_SETTINGS_USER_FK FOREIGN KEY (USER_ID) REFERENCES SIERRA_USER (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE QUALIFIER_SCAN_RELTN ADD CONSTRAINT QUALIFIER_SCAN_QUALIFIER_FK FOREIGN KEY (QUALIFIER_ID) REFERENCES QUALIFIER (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE QUALIFIER_SCAN_RELTN ADD CONSTRAINT QUALIFIER_SCAN_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_SUMMARY ADD CONSTRAINT SUMMARY_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_SUMMARY ADD CONSTRAINT SUMMARY_QUALIFIER_FK FOREIGN KEY (QUALIFIER_ID) REFERENCES QUALIFIER (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE TIME_SERIES_EVENT ADD CONSTRAINT EVENT_TS_FK FOREIGN KEY (TIME_SERIES_ID) REFERENCES QUALIFIER (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE DASHBOARD_SETTINGS ADD CONSTRAINT DASHBOARD_SETTINGS_USER_FK FOREIGN KEY (USER_ID) REFERENCES SIERRA_USER (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE PROJECT_FILTERS ADD CONSTRAINT SETTINGS_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE PROJECT_FILTERS ADD CONSTRAINT SETTINGS_FINDING_TYPE_FK FOREIGN KEY (FINDING_TYPE_ID) REFERENCES FINDING_TYPE (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE GROUP_USER_RELTN ADD CONSTRAINT G_U_R_GROUP_FK FOREIGN KEY (GROUP_ID) REFERENCES SIERRA_GROUP (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE GROUP_USER_RELTN ADD CONSTRAINT G_U_R_USER_FK FOREIGN KEY (USER_ID) REFERENCES SIERRA_USER (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>

-- ----------------------------------------------
-- DDL Statements for views
-- ----------------------------------------------

CREATE VIEW PROJECT_OVERVIEW (PROJECT) AS SELECT NAME FROM PROJECT
<<>>
CREATE VIEW LATEST_SCANS (QUALIFIER,PROJECT,SCAN_ID,SCAN_UUID,TIME) AS SELECT Q.NAME, P.NAME , R.ID, R.UUID, TIMES.TIME FROM QUALIFIER Q, SCAN R, PROJECT P, ( SELECT QSR.QUALIFIER_ID AS QUALIFIER_ID,MAX(R2.SCAN_DATE_TIME) AS TIME FROM SCAN R2, QUALIFIER_SCAN_RELTN QSR, PROJECT P2 WHERE QSR.SCAN_ID = R2.ID AND R2.STATUS = 'FINISHED' AND P2.ID = R2.PROJECT_ID GROUP BY QSR.QUALIFIER_ID, P2.ID ) AS TIMES WHERE R.SCAN_DATE_TIME = TIMES.TIME AND R.STATUS = 'FINISHED' AND P.ID = R.PROJECT_ID AND Q.ID = TIMES.QUALIFIER_ID
<<>>
CREATE VIEW OLDEST_SCANS (QUALIFIER,PROJECT,SCAN_ID,SCAN_UUID,TIME) AS SELECT Q.NAME, P.NAME , R.ID, R.UUID, TIMES.TIME FROM QUALIFIER Q, SCAN R, PROJECT P, ( SELECT QSR.QUALIFIER_ID AS QUALIFIER_ID,MIN(R2.SCAN_DATE_TIME) AS TIME FROM SCAN R2, QUALIFIER_SCAN_RELTN QSR, PROJECT P2 WHERE QSR.SCAN_ID = R2.ID AND R2.STATUS = 'FINISHED' AND P2.ID = R2.PROJECT_ID GROUP BY QSR.QUALIFIER_ID, P2.ID ) AS TIMES WHERE R.SCAN_DATE_TIME = TIMES.TIME AND R.STATUS = 'FINISHED' AND P.ID = R.PROJECT_ID AND Q.ID = TIMES.QUALIFIER_ID AND R.ID NOT IN (SELECT SCAN_ID FROM LATEST_SCANS)
<<>>


