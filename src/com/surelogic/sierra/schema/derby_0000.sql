
-- COMMON CODE --
-- ----------------------------------------------
-- DDL Statements for tables
-- ----------------------------------------------

CREATE TABLE ARTIFACT (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), SCAN_ID BIGINT NOT NULL, ARTIFACT_TYPE_ID BIGINT NOT NULL, PRIMARY_SOURCE_LOCATION_ID BIGINT NOT NULL, PRIORITY INTEGER, SEVERITY INTEGER, MESSAGE VARCHAR(32672), SCAN_NUMBER INTEGER, ASSURANCE_TYPE CHAR(1))
<<>>
CREATE TABLE ARTIFACT_FINDING_RELTN (ARTIFACT_ID BIGINT NOT NULL, FINDING_ID BIGINT NOT NULL)
<<>>
CREATE TABLE ARTIFACT_NUMBER_RELTN (SCAN_ID BIGINT NOT NULL, PARENT_NUMBER INTEGER NOT NULL, CHILD_NUMBER INTEGER NOT NULL, RELATION_TYPE VARCHAR(255) NOT NULL)
<<>>
CREATE TABLE ARTIFACT_SOURCE_LOCATION_RELTN (ARTIFACT_ID BIGINT NOT NULL, SOURCE_LOCATION_ID BIGINT NOT NULL)
<<>>
CREATE TABLE ARTIFACT_TYPE (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), TOOL_ID BIGINT NOT NULL, MNEMONIC VARCHAR(255) NOT NULL, MNEMONIC_DISPLAY VARCHAR(255) NOT NULL, CATEGORY VARCHAR(32672), LINK VARCHAR(32672), INFO VARCHAR(32672), FINDING_TYPE_ID BIGINT)
<<>>
CREATE TABLE COMPILATION_UNIT (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), PACKAGE_NAME VARCHAR(32672) NOT NULL, CU VARCHAR(32672) NOT NULL)
<<>>
CREATE TABLE DELETED_DEFINITIONS (DEFINITION_UUID CHAR(36) NOT NULL, SERVER_UUID CHAR(36) NOT NULL, REVISION BIGINT NOT NULL, DEFINITION_TYPE VARCHAR(10) NOT NULL)
<<>>
CREATE TABLE FILTER_ENTRY (FILTER_SET_ID BIGINT NOT NULL, FINDING_TYPE_ID BIGINT NOT NULL, FILTERED CHAR(1) NOT NULL)
<<>>
CREATE TABLE FILTER_SET (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), UUID CHAR(36) NOT NULL, REVISION BIGINT NOT NULL, NAME VARCHAR(32672) NOT NULL, INFO VARCHAR(32672))
<<>>
CREATE TABLE FILTER_SET_RELTN (CHILD_ID BIGINT NOT NULL, PARENT_ID BIGINT NOT NULL)
<<>>
CREATE TABLE FINDING (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), PROJECT_ID BIGINT NOT NULL, OBSOLETED_BY_ID BIGINT, UUID CHAR(36), IS_READ CHAR(1) DEFAULT 'N', LAST_CHANGED TIMESTAMP, IMPORTANCE INTEGER NOT NULL, SUMMARY VARCHAR(32672) NOT NULL, OBSOLETED_BY_REVISION BIGINT)
<<>>
CREATE TABLE FINDING_RELATION_OVERVIEW (PARENT_FINDING_ID BIGINT NOT NULL, CHILD_FINDING_ID BIGINT NOT NULL, PROJECT_ID BIGINT NOT NULL, RELATION_TYPE VARCHAR(255) NOT NULL, STATUS VARCHAR(9) NOT NULL)
<<>>
CREATE TABLE FINDING_TYPE (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), UUID VARCHAR(32672) NOT NULL, NAME VARCHAR(32672) NOT NULL, SHORT_MESSAGE VARCHAR(32672), INFO VARCHAR(32672))
<<>>
CREATE TABLE LOCATION_MATCH (PROJECT_ID BIGINT NOT NULL, HASH BIGINT NOT NULL, PACKAGE_NAME VARCHAR(32672) NOT NULL, CLASS_NAME VARCHAR(32672) NOT NULL, FINDING_TYPE_ID BIGINT NOT NULL, FINDING_ID BIGINT NOT NULL, REVISION BIGINT)
<<>>
CREATE TABLE METRIC_CU (SCAN_ID BIGINT NOT NULL, COMPILATION_UNIT_ID BIGINT NOT NULL, LINES_OF_CODE INTEGER)
<<>>
CREATE TABLE PROJECT (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), NAME VARCHAR(255) NOT NULL, SERVER_UUID CHAR(36))
<<>>
CREATE TABLE PROJECT_SERVER (PROJECT_ID BIGINT NOT NULL, SERVER_UUID CHAR(36) NOT NULL)
<<>>
CREATE TABLE SCAN (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), USER_ID BIGINT, PROJECT_ID BIGINT NOT NULL, UUID CHAR(36) NOT NULL, JAVA_VERSION VARCHAR(32672), JAVA_VENDOR VARCHAR(32672), SCAN_DATE_TIME TIMESTAMP NOT NULL, STATUS VARCHAR(10) NOT NULL, IS_PARTIAL CHAR(1) NOT NULL DEFAULT 'Y')
<<>>
CREATE TABLE SCAN_ERROR (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), SCAN_ID BIGINT NOT NULL, TOOL_ID BIGINT NOT NULL, MESSAGE VARCHAR(32672) NOT NULL)
<<>>
CREATE TABLE SCAN_FINDING_RELATION_OVERVIEW (SCAN_ID BIGINT NOT NULL, PARENT_FINDING_ID BIGINT NOT NULL, CHILD_FINDING_ID BIGINT NOT NULL, RELATION_TYPE VARCHAR(255) NOT NULL)
<<>>
CREATE TABLE SCAN_OVERVIEW (FINDING_ID BIGINT NOT NULL, SCAN_ID BIGINT NOT NULL, LINE_OF_CODE INTEGER NOT NULL, ARTIFACT_COUNT INTEGER NOT NULL, TOOL VARCHAR(255) NOT NULL, CU VARCHAR(32672), ASSURANCE_TYPE CHAR(1))
<<>>
CREATE TABLE SCAN_SETTINGS (SCAN_ID BIGINT NOT NULL, UUID CHAR(36), NAME VARCHAR(255) NOT NULL, REVISION BIGINT NOT NULL)
<<>>
CREATE TABLE SCAN_SETTING_FILTERS (SCAN_ID BIGINT NOT NULL, FINDING_TYPE_ID BIGINT NOT NULL, IMPORTANCE INTEGER, FILTERED CHAR(1))
<<>>
CREATE TABLE SERVER_DEFINITION_RELTN (DEFINITION_UUID CHAR(36) NOT NULL, SERVER_UUID CHAR(36) NOT NULL)
<<>>
CREATE TABLE SERVER_IDENTITY (UUID CHAR(36) NOT NULL, NAME VARCHAR(2000), REVISION BIGINT NOT NULL)
<<>>
CREATE TABLE SERVER_LOCATION (UUID CHAR(36) NOT NULL, PROTOCOL VARCHAR(5) NOT NULL, HOST VARCHAR(2000), PORT INTEGER, CONTEXT_PATH VARCHAR(2000), SERVER_USER VARCHAR(255), PASSWORD VARCHAR(255), AUTOSYNC CHAR(1) NOT NULL, TEAMSERVER CHAR(1) NOT NULL, SAVEPASS CHAR(1) NOT NULL)
<<>>
CREATE TABLE SERVER_LOCATION_PROJECT (SERVER CHAR(36) NOT NULL, PROJECT VARCHAR(2000) NOT NULL)
<<>>
CREATE TABLE SETTING_FILTER_SETS (SETTINGS_ID BIGINT NOT NULL, FILTER_SET_ID BIGINT NOT NULL, IMPORTANCE INTEGER, FILTERED CHAR(1) NOT NULL DEFAULT 'N')
<<>>
CREATE TABLE SETTING_FILTERS (SETTINGS_ID BIGINT NOT NULL, FINDING_TYPE_ID BIGINT NOT NULL, IMPORTANCE INTEGER, FILTERED CHAR(1))
<<>>
CREATE TABLE SETTINGS (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), NAME VARCHAR(255) NOT NULL, REVISION BIGINT NOT NULL, UUID CHAR(36))
<<>>
CREATE TABLE SETTINGS_PROJECT_RELTN (SETTINGS_ID BIGINT NOT NULL, PROJECT_NAME VARCHAR(255) NOT NULL)
<<>>
CREATE TABLE SIERRA_AUDIT (UUID CHAR(36) NOT NULL, FINDING_ID BIGINT NOT NULL, PROJECT_ID BIGINT NOT NULL, EVENT VARCHAR(10) NOT NULL, USER_ID BIGINT, DATE_TIME TIMESTAMP NOT NULL, VALUE VARCHAR(32672), REVISION BIGINT)
<<>>
CREATE TABLE SIERRA_USER (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), USER_NAME VARCHAR(255) NOT NULL, SALT INTEGER, HASH CHAR (20) FOR BIT DATA, IS_ACTIVE CHAR(1) NOT NULL DEFAULT 'Y')
<<>>
CREATE TABLE SOURCE_LOCATION (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), COMPILATION_UNIT_ID BIGINT NOT NULL, HASH BIGINT, LINE_OF_CODE INTEGER NOT NULL, END_LINE_OF_CODE INTEGER NOT NULL, LOCATION_TYPE VARCHAR(6), IDENTIFIER VARCHAR(32672), CLASS_NAME VARCHAR(32672))
<<>>
CREATE TABLE TOOL (ID BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), NAME VARCHAR(255) NOT NULL, VERSION VARCHAR(255) NOT NULL)
<<>>
CREATE TABLE DEFAULT_SETTINGS (UUID CHAR(36) NOT NULL)
<<>>
-- ----------------------------------------------
-- DDL Statements for indexes
-- ----------------------------------------------

CREATE INDEX A_N_R_RELATION_TYPE_IDX ON ARTIFACT_NUMBER_RELTN (RELATION_TYPE)
<<>>
CREATE INDEX A_N_R_CHILD_NUMBER_IDX ON ARTIFACT_NUMBER_RELTN (CHILD_NUMBER)
<<>>
CREATE INDEX A_N_R_PARENT_NUMBER_IDX ON ARTIFACT_NUMBER_RELTN (PARENT_NUMBER)
<<>>
CREATE INDEX ARTIFACT_SCAN_NUMBER_IDX ON ARTIFACT (SCAN_NUMBER)
<<>>
CREATE INDEX AUDIT_EVENT_INDEX ON SIERRA_AUDIT (EVENT)
<<>>
CREATE INDEX AUDIT_REVISION_INDEX ON SIERRA_AUDIT (REVISION)
<<>>
CREATE INDEX AUDIT_TIMESTAMP_INDEX ON SIERRA_AUDIT (DATE_TIME)
<<>>
CREATE INDEX FINDING_IMPORTANCE_INDEX ON FINDING (IMPORTANCE)
<<>>
CREATE INDEX FINDING_UUID_INDEX ON FINDING (UUID)
<<>>
CREATE INDEX FRO_STATUS_IDX ON FINDING_RELATION_OVERVIEW (STATUS)
<<>>
CREATE INDEX FRO_RELATION_TYPE_IDX ON FINDING_RELATION_OVERVIEW (RELATION_TYPE)
<<>>
CREATE INDEX MATCH_HASH_INDEX ON LOCATION_MATCH (HASH)
<<>>
CREATE INDEX SD_SERVER_INDEX ON SERVER_DEFINITION_RELTN (SERVER_UUID)
<<>>
CREATE INDEX S_F_FILTERED_INDEX ON SETTING_FILTERS (FILTERED)
<<>>
CREATE INDEX SFRO_RELATION_TYPE_IDX ON SCAN_FINDING_RELATION_OVERVIEW (RELATION_TYPE)
<<>>
CREATE INDEX SL_CLASS_INDEX ON SOURCE_LOCATION (CLASS_NAME)
<<>>
CREATE INDEX SOURCE_LOCATION_HASH_INDEX ON SOURCE_LOCATION (HASH)
<<>>
-- ----------------------------------------------
-- DDL Statements for keys
-- ----------------------------------------------

-- primary/unique

ALTER TABLE ARTIFACT ADD CONSTRAINT SQL081027164830160 PRIMARY KEY (ID)
<<>>
ALTER TABLE ARTIFACT_FINDING_RELTN ADD CONSTRAINT SQL081027164830300 PRIMARY KEY (ARTIFACT_ID, FINDING_ID)
<<>>
ALTER TABLE ARTIFACT_NUMBER_RELTN ADD CONSTRAINT SQL081027164838210 PRIMARY KEY (SCAN_ID, CHILD_NUMBER, PARENT_NUMBER, RELATION_TYPE)
<<>>
ALTER TABLE ARTIFACT_SOURCE_LOCATION_RELTN ADD CONSTRAINT SQL081027164830380 PRIMARY KEY (ARTIFACT_ID, SOURCE_LOCATION_ID)
<<>>
ALTER TABLE ARTIFACT_TYPE ADD CONSTRAINT SQL081027164829950 PRIMARY KEY (ID)
<<>>
ALTER TABLE ARTIFACT_TYPE ADD CONSTRAINT ARTIFACT_TYPE_CN UNIQUE (TOOL_ID, MNEMONIC)
<<>>
ALTER TABLE COMPILATION_UNIT ADD CONSTRAINT SQL081027164829970 PRIMARY KEY (ID)
<<>>
ALTER TABLE COMPILATION_UNIT ADD CONSTRAINT COMPILATION_UNIT_CN UNIQUE (PACKAGE_NAME, CU)
<<>>
ALTER TABLE DELETED_DEFINITIONS ADD CONSTRAINT SQL081027164837840 UNIQUE (DEFINITION_UUID)
<<>>
ALTER TABLE FILTER_ENTRY ADD CONSTRAINT SQL081027164834550 PRIMARY KEY (FILTER_SET_ID, FINDING_TYPE_ID)
<<>>
ALTER TABLE FILTER_SET ADD CONSTRAINT SQL081027164834420 PRIMARY KEY (ID)
<<>>
ALTER TABLE FILTER_SET ADD CONSTRAINT SQL081027164834421 UNIQUE (UUID)
<<>>
ALTER TABLE FILTER_SET_RELTN ADD CONSTRAINT SQL081027164834500 PRIMARY KEY (CHILD_ID, PARENT_ID)
<<>>
ALTER TABLE FINDING ADD CONSTRAINT SQL081027164829790 PRIMARY KEY (ID)
<<>>
ALTER TABLE FINDING_RELATION_OVERVIEW ADD CONSTRAINT SQL081027164838290 PRIMARY KEY (PARENT_FINDING_ID, CHILD_FINDING_ID, RELATION_TYPE)
<<>>
ALTER TABLE FINDING_TYPE ADD CONSTRAINT SQL081027164830470 PRIMARY KEY (ID)
<<>>
ALTER TABLE FINDING_TYPE ADD CONSTRAINT SQL081027164830471 UNIQUE (UUID)
<<>>
ALTER TABLE LOCATION_MATCH ADD CONSTRAINT SQL081027164830620 PRIMARY KEY (PROJECT_ID, HASH, PACKAGE_NAME, CLASS_NAME, FINDING_TYPE_ID)
<<>>
ALTER TABLE METRIC_CU ADD CONSTRAINT SQL081027164830090 PRIMARY KEY (SCAN_ID, COMPILATION_UNIT_ID)
<<>>
ALTER TABLE PROJECT ADD CONSTRAINT SQL081027164829670 PRIMARY KEY (ID)
<<>>
ALTER TABLE PROJECT ADD CONSTRAINT SQL081027164829671 UNIQUE (NAME)
<<>>
ALTER TABLE SCAN ADD CONSTRAINT SQL081027164829690 PRIMARY KEY (ID)
<<>>
ALTER TABLE SCAN ADD CONSTRAINT SQL081027164829691 UNIQUE (UUID)
<<>>
ALTER TABLE SCAN_ERROR ADD CONSTRAINT SQL081027164829740 PRIMARY KEY (ID)
<<>>
ALTER TABLE SCAN_FINDING_RELATION_OVERVIEW ADD CONSTRAINT SQL081027164838240 PRIMARY KEY (SCAN_ID, PARENT_FINDING_ID, CHILD_FINDING_ID, RELATION_TYPE)
<<>>
ALTER TABLE SCAN_OVERVIEW ADD CONSTRAINT SQL081027164832730 PRIMARY KEY (FINDING_ID, SCAN_ID)
<<>>
ALTER TABLE SCAN_SETTINGS ADD CONSTRAINT SCAN_SETTINGS_PK PRIMARY KEY (SCAN_ID)
<<>>
ALTER TABLE SCAN_SETTING_FILTERS ADD CONSTRAINT SCAN_SETTING_FILTERS_PK PRIMARY KEY (SCAN_ID,FINDING_TYPE_ID)
<<>>
ALTER TABLE SETTINGS ADD CONSTRAINT SQL081027164834800 PRIMARY KEY (ID)
<<>>
ALTER TABLE SETTINGS ADD CONSTRAINT SQL081027164834801 UNIQUE (UUID)
<<>>
ALTER TABLE SETTINGS_PROJECT_RELTN ADD CONSTRAINT SQL081027164834850 PRIMARY KEY (SETTINGS_ID, PROJECT_NAME)
<<>>
ALTER TABLE SERVER_DEFINITION_RELTN ADD CONSTRAINT SQL081027164837210 PRIMARY KEY (DEFINITION_UUID)
<<>>
ALTER TABLE SERVER_IDENTITY ADD CONSTRAINT SERVER_IDENTITY_PK PRIMARY KEY (UUID)
<<>>
ALTER TABLE SERVER_LOCATION ADD CONSTRAINT SQL081027164837800 PRIMARY KEY (UUID)
<<>>
ALTER TABLE SERVER_LOCATION_PROJECT ADD CONSTRAINT SQL081027164837870 PRIMARY KEY (SERVER, PROJECT)
<<>>
ALTER TABLE SIERRA_AUDIT ADD CONSTRAINT SQL081027164829850 PRIMARY KEY (UUID)
<<>>
ALTER TABLE SIERRA_USER ADD CONSTRAINT SQL081027164829630 PRIMARY KEY (ID)
<<>>
ALTER TABLE SIERRA_USER ADD CONSTRAINT SQL081027164829631 UNIQUE (USER_NAME)
<<>>
ALTER TABLE SOURCE_LOCATION ADD CONSTRAINT SQL081027164830050 PRIMARY KEY (ID)
<<>>
ALTER TABLE TOOL ADD CONSTRAINT SQL081027164829650 PRIMARY KEY (ID)
<<>>
ALTER TABLE TOOL ADD CONSTRAINT TOOL_CN UNIQUE (NAME, VERSION)
<<>>
-- foreign

ALTER TABLE ARTIFACT ADD CONSTRAINT ARTIFACT_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE ARTIFACT ADD CONSTRAINT ARTIFACT_ARTIFACT_TYPE_FK FOREIGN KEY (ARTIFACT_TYPE_ID) REFERENCES ARTIFACT_TYPE (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE ARTIFACT ADD CONSTRAINT ARTIFACT_PRIMARY_SOURCE_LOCATION_FK FOREIGN KEY (PRIMARY_SOURCE_LOCATION_ID) REFERENCES SOURCE_LOCATION (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE ARTIFACT_FINDING_RELTN ADD CONSTRAINT AFR_ARTIFACT_FK FOREIGN KEY (ARTIFACT_ID) REFERENCES ARTIFACT (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE ARTIFACT_FINDING_RELTN ADD CONSTRAINT AFR_FINDING_FK FOREIGN KEY (FINDING_ID) REFERENCES FINDING (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE ARTIFACT_NUMBER_RELTN ADD CONSTRAINT ART_NUMBER_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE ARTIFACT_SOURCE_LOCATION_RELTN ADD CONSTRAINT ASLR_ARTIFACT_FK FOREIGN KEY (ARTIFACT_ID) REFERENCES ARTIFACT (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE ARTIFACT_SOURCE_LOCATION_RELTN ADD CONSTRAINT ASLR_SOURCE_LOCATION_FK FOREIGN KEY (SOURCE_LOCATION_ID) REFERENCES SOURCE_LOCATION (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE ARTIFACT_TYPE ADD CONSTRAINT ARTIFACT_TYPE_TOOL_FK FOREIGN KEY (TOOL_ID) REFERENCES TOOL (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE ARTIFACT_TYPE ADD CONSTRAINT AT_FT_FK FOREIGN KEY (FINDING_TYPE_ID) REFERENCES FINDING_TYPE (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE DELETED_DEFINITIONS ADD CONSTRAINT DD_DEFINITION_UUID_FK FOREIGN KEY (DEFINITION_UUID) REFERENCES SERVER_DEFINITION_RELTN (DEFINITION_UUID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE FILTER_ENTRY ADD CONSTRAINT FE_FILTER_SET_FK FOREIGN KEY (FILTER_SET_ID) REFERENCES FILTER_SET (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE FILTER_ENTRY ADD CONSTRAINT FE_FINDING_TYPE_FK FOREIGN KEY (FINDING_TYPE_ID) REFERENCES FINDING_TYPE (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE FILTER_SET_RELTN ADD CONSTRAINT CHILD_FILTER_SET_FK FOREIGN KEY (CHILD_ID) REFERENCES FILTER_SET (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE FILTER_SET_RELTN ADD CONSTRAINT PARENT_FILTER_SET_FK FOREIGN KEY (PARENT_ID) REFERENCES FILTER_SET (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE FINDING ADD CONSTRAINT FINDING_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE FINDING ADD CONSTRAINT FINDING_OBSOLETED_FINDING_FK FOREIGN KEY (OBSOLETED_BY_ID) REFERENCES FINDING (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE FINDING_RELATION_OVERVIEW ADD CONSTRAINT FRO_PARENT_FINDING_FK FOREIGN KEY (PARENT_FINDING_ID) REFERENCES FINDING (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE FINDING_RELATION_OVERVIEW ADD CONSTRAINT FRO_CHILD_FINDING_FK FOREIGN KEY (CHILD_FINDING_ID) REFERENCES FINDING (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE FINDING_RELATION_OVERVIEW ADD CONSTRAINT FRO_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE LOCATION_MATCH ADD CONSTRAINT MATCH_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE LOCATION_MATCH ADD CONSTRAINT MATCH_FINDING_TYPE_FK FOREIGN KEY (FINDING_TYPE_ID) REFERENCES FINDING_TYPE (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE LOCATION_MATCH ADD CONSTRAINT MATCH_FINDING_FK FOREIGN KEY (FINDING_ID) REFERENCES FINDING (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE METRIC_CU ADD CONSTRAINT METRIC_CU_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE METRIC_CU ADD CONSTRAINT METRIC_CU_COMPILATION_UNIT_FK FOREIGN KEY (COMPILATION_UNIT_ID) REFERENCES COMPILATION_UNIT (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE PROJECT_SERVER ADD CONSTRAINT PROJECT_SERVER_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN ADD CONSTRAINT SCAN_SPSUSER_FK FOREIGN KEY (USER_ID) REFERENCES SIERRA_USER (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN ADD CONSTRAINT SCAN_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_ERROR ADD CONSTRAINT ERROR_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_ERROR ADD CONSTRAINT ERROR_TOOL_FK FOREIGN KEY (TOOL_ID) REFERENCES TOOL (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_FINDING_RELATION_OVERVIEW ADD CONSTRAINT SFRO_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_FINDING_RELATION_OVERVIEW ADD CONSTRAINT SFRO_PARENT_FINDING_FK FOREIGN KEY (PARENT_FINDING_ID) REFERENCES FINDING (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_FINDING_RELATION_OVERVIEW ADD CONSTRAINT SFRO_CHILD_FINDING_FK FOREIGN KEY (CHILD_FINDING_ID) REFERENCES FINDING (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_OVERVIEW ADD CONSTRAINT SO_FINDING_FK FOREIGN KEY (FINDING_ID) REFERENCES FINDING (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_OVERVIEW ADD CONSTRAINT SO_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_SETTINGS ADD CONSTRAINT SS_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_SETTING_FILTERS ADD CONSTRAINT SSF_SCAN_FK FOREIGN KEY (SCAN_ID) REFERENCES SCAN (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SCAN_SETTING_FILTERS ADD CONSTRAINT SSF_FINDING_TYPE_FK FOREIGN KEY (FINDING_TYPE_ID) REFERENCES FINDING_TYPE (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE SERVER_LOCATION_PROJECT ADD CONSTRAINT SLP_SERVER_FK FOREIGN KEY (SERVER) REFERENCES SERVER_LOCATION (UUID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SETTING_FILTER_SETS ADD CONSTRAINT PFS_SETTING_FK FOREIGN KEY (SETTINGS_ID) REFERENCES SETTINGS (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SETTING_FILTER_SETS ADD CONSTRAINT PFS_FILTER_SET_FK FOREIGN KEY (FILTER_SET_ID) REFERENCES FILTER_SET (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SETTING_FILTERS ADD CONSTRAINT SETTING_SETTINGS_FK FOREIGN KEY (SETTINGS_ID) REFERENCES SETTINGS (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SETTING_FILTERS ADD CONSTRAINT SETTING_FINDING_TYPE_FK FOREIGN KEY (FINDING_TYPE_ID) REFERENCES FINDING_TYPE (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE SETTINGS_PROJECT_RELTN ADD CONSTRAINT PSR_SETTINGS_FK FOREIGN KEY (SETTINGS_ID) REFERENCES SETTINGS (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SIERRA_AUDIT ADD CONSTRAINT AUDIT_FINDING_FK FOREIGN KEY (FINDING_ID) REFERENCES FINDING (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SIERRA_AUDIT ADD CONSTRAINT AUDIT_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE SIERRA_AUDIT ADD CONSTRAINT AUDIT_SPSUSER_FK FOREIGN KEY (USER_ID) REFERENCES SIERRA_USER (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE SOURCE_LOCATION ADD CONSTRAINT SOURCE_LOCATION_COMPILATION_UNIT_FK FOREIGN KEY (COMPILATION_UNIT_ID) REFERENCES COMPILATION_UNIT (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
-- ----------------------------------------------
-- DDL Statements for checks
-- ----------------------------------------------

ALTER TABLE ARTIFACT ADD CONSTRAINT ARTIFACT_ASSURANCE_CN CHECK (ASSURANCE_TYPE IS NULL OR ASSURANCE_TYPE IN ('I','C'))
<<>>
ALTER TABLE DELETED_DEFINITIONS ADD CONSTRAINT DD_TYPE_CN CHECK (DEFINITION_TYPE IN ('CATEGORY','FINDINGTYPE','SCANFILTER'))
<<>>
ALTER TABLE FILTER_ENTRY ADD CONSTRAINT FE_FILTERED_CN CHECK (FILTERED IN ('Y','N'))
<<>>
ALTER TABLE FINDING ADD CONSTRAINT FINDING_READ_CN CHECK (IS_READ IN ('Y','N'))
<<>>
ALTER TABLE FINDING_RELATION_OVERVIEW ADD CONSTRAINT FRO_STATUS_CN CHECK (STATUS IN ('New','Fixed','Unchanged'))
<<>>
ALTER TABLE SCAN ADD CONSTRAINT SCAN_STATUS_CN CHECK (STATUS IN ('LOADING', 'FINISHED', 'GENERATED'))
<<>>
ALTER TABLE SCAN_OVERVIEW ADD CONSTRAINT SCAN_OVERVIEW_ASSURANCE_CN CHECK (ASSURANCE_TYPE IS NULL OR ASSURANCE_TYPE IN ('I','C'))
<<>>
ALTER TABLE SCAN_SETTING_FILTERS ADD CONSTRAINT SSF_FILTERED_CN CHECK (FILTERED IN ('Y','N'))
<<>>
ALTER TABLE SERVER_LOCATION ADD CONSTRAINT SL_PROTOCOL_CN CHECK (PROTOCOL IN ('http','https'))
<<>>
ALTER TABLE SERVER_LOCATION ADD CONSTRAINT SL_AUTOSYNC_CN CHECK (AUTOSYNC IN ('Y','N'))
<<>>
ALTER TABLE SERVER_LOCATION ADD CONSTRAINT SL_TEAMSERVER_CN CHECK (TEAMSERVER IN ('Y','N'))
<<>>
ALTER TABLE SERVER_LOCATION ADD CONSTRAINT SL_SAVE_PASS_CN CHECK (SAVEPASS IN ('Y','N'))
<<>>
ALTER TABLE SETTING_FILTER_SETS ADD CONSTRAINT SF_FILTERED_CN CHECK (FILTERED IN ('Y','N'))
<<>>
ALTER TABLE SETTING_FILTERS ADD CONSTRAINT SETTING_FILTERED_FK CHECK (FILTERED IN ('Y','N'))
<<>>
ALTER TABLE SIERRA_AUDIT ADD CONSTRAINT EVENT_CN CHECK (EVENT IN ('COMMENT','IMPORTANCE','READ','SUMMARY'))
<<>>
ALTER TABLE SIERRA_USER ADD CONSTRAINT SU_IS_ACTIVE_CN CHECK (IS_ACTIVE IN ('Y','N'))
<<>>
ALTER TABLE SOURCE_LOCATION ADD CONSTRAINT FIELD_TYPE_CN CHECK (LOCATION_TYPE IN ('METHOD', 'CLASS', 'FIELD'))
<<>>


-- CLIENT CODE --
-- ----------------------------------------------
-- DDL Statements for tables
-- ----------------------------------------------

CREATE TABLE SYNCH (PROJECT_ID BIGINT NOT NULL, DATE_TIME TIMESTAMP NOT NULL, COMMIT_REVISION BIGINT NOT NULL, PRIOR_REVISION BIGINT NOT NULL, COMMIT_COUNT INTEGER, UPDATE_COUNT INTEGER)
<<>>
CREATE TABLE FINDINGS_OVERVIEW (FINDING_ID BIGINT NOT NULL, PROJECT_ID BIGINT NOT NULL, AUDITED VARCHAR(3) NOT NULL, LAST_CHANGED TIMESTAMP, IMPORTANCE VARCHAR(10) NOT NULL, STATUS VARCHAR(9) NOT NULL, LINE_OF_CODE INTEGER, ARTIFACT_COUNT INTEGER, AUDIT_COUNT INTEGER NOT NULL, PROJECT VARCHAR(255) NOT NULL, PACKAGE VARCHAR(32672) NOT NULL, CLASS VARCHAR(32672) NOT NULL, TOOL VARCHAR(255), SUMMARY VARCHAR(32672) NOT NULL, CU VARCHAR(32672), FINDING_TYPE VARCHAR(32672), ASSURANCE_TYPE CHAR(1))
<<>>
-- ----------------------------------------------
-- DDL Statements for indexes
-- ----------------------------------------------

CREATE INDEX F_O_ASSURANCE_IDX ON FINDINGS_OVERVIEW (ASSURANCE_TYPE)
<<>>
CREATE INDEX FO_COMPILATION_INDEX ON FINDINGS_OVERVIEW (CU)
<<>>
CREATE INDEX FO_TOOL ON FINDINGS_OVERVIEW (TOOL)
<<>>
CREATE INDEX FO_CLASS ON FINDINGS_OVERVIEW (CLASS)
<<>>
CREATE INDEX FO_PACKAGE ON FINDINGS_OVERVIEW (PACKAGE)
<<>>
CREATE INDEX FO_PROJECT ON FINDINGS_OVERVIEW (PROJECT)
<<>>
CREATE INDEX FO_COMMENTS ON FINDINGS_OVERVIEW (AUDIT_COUNT)
<<>>
CREATE INDEX FO_ARTIFACT_COUNT ON FINDINGS_OVERVIEW (ARTIFACT_COUNT)
<<>>
CREATE INDEX FO_LINE_OF_CODE ON FINDINGS_OVERVIEW (LINE_OF_CODE)
<<>>
CREATE INDEX FO_STATUS ON FINDINGS_OVERVIEW (STATUS)
<<>>
CREATE INDEX FO_IMPORTANCE ON FINDINGS_OVERVIEW (IMPORTANCE)
<<>>
CREATE INDEX FO_LAST_CHANGED ON FINDINGS_OVERVIEW (LAST_CHANGED)
<<>>
CREATE INDEX FO_AUDITED ON FINDINGS_OVERVIEW (AUDITED)
<<>>
-- ----------------------------------------------
-- DDL Statements for keys
-- ----------------------------------------------

-- primary/unique

ALTER TABLE FINDINGS_OVERVIEW ADD CONSTRAINT SQL081027164832790 PRIMARY KEY (FINDING_ID)
<<>>
ALTER TABLE SYNCH ADD CONSTRAINT SQL081027164833340 PRIMARY KEY (PROJECT_ID, DATE_TIME)
<<>>
-- foreign

ALTER TABLE FINDINGS_OVERVIEW ADD CONSTRAINT FO_FINDING_FK FOREIGN KEY (FINDING_ID) REFERENCES FINDING (ID) ON DELETE CASCADE ON UPDATE NO ACTION
<<>>
ALTER TABLE FINDINGS_OVERVIEW ADD CONSTRAINT FO_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE FINDINGS_OVERVIEW ADD CONSTRAINT F_O_FINDING_TYPE_FK FOREIGN KEY (FINDING_TYPE) REFERENCES FINDING_TYPE (UUID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
ALTER TABLE SYNCH ADD CONSTRAINT SYNCH_PROJECT_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID) ON DELETE NO ACTION ON UPDATE NO ACTION
<<>>
-- ----------------------------------------------
-- DDL Statements for checks
-- ----------------------------------------------

ALTER TABLE FINDINGS_OVERVIEW ADD CONSTRAINT FINDINGS_OVERVIEW_ASSURANCE_CN CHECK (ASSURANCE_TYPE IS NULL OR ASSURANCE_TYPE IN ('I','C'))
<<>>
ALTER TABLE FINDINGS_OVERVIEW ADD CONSTRAINT FO_STATUS_CN CHECK (STATUS IN ('New','Fixed','Unchanged'))
<<>>
ALTER TABLE FINDINGS_OVERVIEW ADD CONSTRAINT FO_IMPORTANCE_CN CHECK (IMPORTANCE IN ('Irrelevant','Low','Medium','High','Critical'))
<<>>
ALTER TABLE FINDINGS_OVERVIEW ADD CONSTRAINT FO_AUDITED_CN CHECK (AUDITED IN ('Yes','No'))
<<>>
-- ----------------------------------------------
-- DDL Statements for views
-- ----------------------------------------------

CREATE VIEW PROJECT_OVERVIEW (PROJECT) AS SELECT NAME FROM PROJECT
<<>>
CREATE VIEW LATEST_SCANS  (PROJECT,SCAN_ID,SCAN_UUID,TIME)  AS SELECT    P.NAME PROJECT, R.ID SCAN_ID, R.UUID, TIMES.TIME  FROM SCAN R, PROJECT P,   (    SELECT MAX(R2.SCAN_DATE_TIME) AS TIME    FROM        SCAN R2,        PROJECT P2    WHERE        P2.ID = R2.PROJECT_ID    GROUP BY        P2.NAME   ) AS TIMES WHERE R.SCAN_DATE_TIME = TIMES.TIME AND P.ID = R.PROJECT_ID
<<>>
CREATE VIEW OLDEST_SCANS  (PROJECT,SCAN_ID,SCAN_UUID,TIME)  AS SELECT    P.NAME PROJECT, R.ID SCAN_ID, R.UUID, TIMES.TIME  FROM SCAN R, PROJECT P,   (    SELECT MIN(R2.SCAN_DATE_TIME) AS TIME    FROM        SCAN R2,        PROJECT P2    WHERE        P2.ID = R2.PROJECT_ID    GROUP BY        P2.NAME   ) AS TIMES WHERE R.SCAN_DATE_TIME = TIMES.TIME AND P.ID = R.PROJECT_ID AND R.ID NOT IN (SELECT SCAN_ID FROM LATEST_SCANS)
<<>>
CREATE VIEW FIXED_FINDINGS    (ID)  AS    SELECT SO.FINDING_ID FROM OLDEST_SCANS OS, SCAN_OVERVIEW SO   WHERE SO.SCAN_ID = OS.SCAN_ID   EXCEPT   SELECT SO.FINDING_ID FROM LATEST_SCANS OS, SCAN_OVERVIEW SO   WHERE SO.SCAN_ID = OS.SCAN_ID
<<>>
CREATE VIEW RECENT_FINDINGS    (ID)  AS    SELECT SO.FINDING_ID FROM LATEST_SCANS OS, SCAN_OVERVIEW SO   WHERE SO.SCAN_ID = OS.SCAN_ID   EXCEPT   SELECT SO.FINDING_ID FROM OLDEST_SCANS OS, SCAN_OVERVIEW SO   WHERE SO.SCAN_ID = OS.SCAN_ID
<<>>
CREATE VIEW CURRENT_FINDINGS   (ID) AS   SELECT SO.FINDING_ID FROM OLDEST_SCANS OS, SCAN_OVERVIEW SO   WHERE SO.SCAN_ID = OS.SCAN_ID   UNION   SELECT SO.FINDING_ID FROM LATEST_SCANS OS, SCAN_OVERVIEW SO   WHERE SO.SCAN_ID = OS.SCAN_ID
<<>>
