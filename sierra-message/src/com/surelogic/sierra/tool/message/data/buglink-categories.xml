<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<listCategoryResponse>
  <filterSets>
    <uid>d4ed6250-181e-11e4-8c21-0800200c9a66</uid>
    <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
    <revision>0</revision>
    <name>Android</name>
    <info>Rules specific to Android applications</info>
        <filter>
            <type>CallSuperFirst</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CallSuperLast</type>
            <filtered>false</filtered>
        </filter>    
        <filter>
            <type>ProtectLogD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ProtectLogV</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DoNotHardCodeSDCard</type>
            <filtered>false</filtered>
        </filter>
  </filterSets>

  <filterSets>
        <uid>040502eb-f9d6-4041-9cdd-2206c73f30d0</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Design Rules</name>
        <info>
			The Design Ruleset contains a collection of rules that find
			questionable designs.
		</info>
        <filter>
            <type>UseUtilityClass</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>PositionLiteralsFirstInCaseInsensitiveComparisons</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidProtectedMethodInFinalClassNotExtending</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>LogicInversion</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseVarargs</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FieldDeclarationsShouldBeAtStartOfClass</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>GodClass</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>UseCollectionIsEmpty</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AbstractClassWithoutAnyMethod</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NonCaseLabelInSwitchStatement</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>PositionLiteralsFirstInComparisons</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MissingStaticMethodInNonInstantiatableClass</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidSynchronizedAtMethodLevel</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>InstantiationToGetClass</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>PreserveStackTrace</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DefaultLabelNotLastInSwitchStmt</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UncommentedEmptyMethod</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UncommentedEmptyConstructor</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidProtectedFieldInFinalClass</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SimplifyConditional</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SwitchDensity</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseSingleton</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TooFewBranchesForASwitchStatement</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ClassWithOnlyPrivateConstructorsShouldBeFinal</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EmptyMethodInAbstractClassShouldBeAbstract</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NonStaticInitializer</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ConstructorCallsOverridableMethod</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ImmutableField</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidReassigningParameters</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidInstanceofChecksInCatchClause</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NonThreadSafeSingleton</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnnecessaryLocalBeforeReturn</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AbstractClassWithoutAbstractMethod</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidDeeplyNestedIfStmts</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CompareObjectsWithEquals</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SimpleDateFormatNeedsLocale</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ConfusingTernary</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidConstantsInterface</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AssignmentToNonFinalStatic</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SwitchStmtsShouldHaveDefault</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AccessorClassGeneration</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SimplifyBooleanExpressions</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>114e6241-e570-442d-8ba0-b69d32f7a026</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Security Code Guidelines</name>
        <info>
			These rules check the security guidelines from Sun,
			published at
			http://java.sun.com/security/seccodeguide.html#gcg
		</info>
        <filter>
            <type>ArrayIsStoredDirectly</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>PT_ABSOLUTE_PATH_TRAVERSAL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>PT_RELATIVE_PATH_TRAVERSAL</type>
            <filtered>false</filtered>
        </filter>        
    </filterSets>
    <filterSets>
        <uid>14b0a93f-fa30-4e14-a738-3faa0235cd6e</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Controversial Rules</name>
        <info>
			The Controversial Ruleset contains rules that, for whatever
			reason, are considered controversial. They are separated out
			here to allow people to include as they see fit via custom
			rulesets. This ruleset was initially created in response to
			discussions over UnnecessaryConstructorRule which Tom likes
			but most people really dislike :-)
		</info>
        <filter>
            <type>OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseConcurrentHashMap</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidLiteralsInIfCondition</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TESTING</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TESTING1</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TESTING3</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TESTING2</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IGNORE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NOISE_NULL_DEREFERENCE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NOISE_METHOD_CALL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NOISE_FIELD_REFERENCE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NOISE_OPERATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>OBL_UNSATISFIED_OBLIGATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>OneDeclarationPerLine</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidPrefixingMethodParameters</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseObjectForClearerAPI</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>AtLeastOneConstructor</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CallSuperInConstructor</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnusedModifier</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BooleanInversion</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidUsingNativeCode</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DontImportSun</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidUsingVolatile</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidAccessibilityAlteration</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AssignmentInOperand</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SingularField</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidUsingShortType</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NullAssignment</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnnecessaryConstructor</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SuspiciousOctalEscape</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DefaultPackage</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>OnlyOneReturn</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DataflowAnomalyAnalysis</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnnecessaryParentheses</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>15105317-d7f9-418b-8fe3-b17f403e49ce</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Finalizer Rules</name>
        <info>
			These rules deal with different problems that can occur with
			finalizers.
		</info>
        <filter>
            <type>FinalizeOverloaded</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>1f55fb3f-fda9-4e21-8618-73388c8b4b20</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Internationalization</name>
        <info>
			code flaws having to do with internationalization and locale
		</info>
        <filter>
            <type>DM_DEFAULT_ENCODING</type>
            <filtered>false</filtered>
        </filter> 
        <filter>
            <type>DM_CONVERT_CASE</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>2b7d423c-ca28-4645-9177-ef72a46c7462</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Clone Implementation Rules</name>
        <info>
			The Clone Implementation ruleset contains a collection of
			rules that find questionable usages of the clone() method.
		</info>
        <filter>
            <type>CloneThrowsCloneNotSupportedException</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>31160bb7-36a4-489e-a421-6280988841a6</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>String and StringBuffer Rules</name>
        <info>
			These rules deal with different problems that can occur with
			manipulation of the class String or StringBuffer.
		</info>
        <filter>
            <type>ConsecutiveAppendsShouldReuse</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>AppendCharacterWithChar</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidDuplicateLiterals</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnnecessaryCaseChange</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseStringBufferLength</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>InefficientStringBuffering</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>StringBufferInstantiationWithChar</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>InsufficientStringBufferDeclaration</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UselessStringValueOf</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ConsecutiveLiteralAppends</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseIndexOfChar</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidStringBufferField</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>InefficientEmptyStringCheck</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>3d4882a0-c9ea-4462-b995-508c55890182</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Optimization Rules</name>
        <info>
			These rules deal with different optimizations that generally
			apply to performance best practices.
		</info>
        <filter>
            <type>RedundantFieldInitializer</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>PrematureDeclaration</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>AvoidArrayLoops</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LocalVariableCouldBeFinal</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidInstantiatingObjectsInLoops</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnnecessaryWrapperObjectCreation</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MethodArgumentCouldBeFinal</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AddEmptyString</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseArrayListInsteadOfVector</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SimplifyStartsWith</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseArraysAsList</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>5e842b61-6cd3-4617-a02c-c3f1b159b3dd</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Bad practice</name>
        <info>
			Violations of recommended and essential coding practice.
			Examples include hash code and equals problems, cloneable
			idiom, dropped exceptions, Serializable problems, and misuse
			of finalize. We strive to make this analysis accurate,
			although some groups may not care about some of the bad
			practices.
		</info>
        <filter>
            <type>PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_USES_NEWLINE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_NEGATING_RESULT_OF_COMPARETO</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>GC_UNCHECKED_TYPE_IN_GENERIC_CALL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CNT_ROUGH_CONSTANT_VALUE</type>
            <filtered>false</filtered>
        </filter>		
		<filter>
            <type>RC_REF_COMPARISON_BAD_PRACTICE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_READ_RESOLVE_MUST_RETURN_OBJECT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_VERY_CONFUSING_INTENTIONAL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_BAD_FIELD_STORE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SR_NOT_CHECKED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_BAD_FIELD_INNER_CLASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SameSimpleNameAsInterface</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AM_CREATES_EMPTY_ZIP_FILE_ENTRY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ES_COMPARING_STRINGS_WITH_EQ</type>
            <filtered>false</filtered>
        </filter>
       <filter>
            <type>SI_INSTANCE_BEFORE_FINALS_ASSIGNED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FI_FINALIZER_ONLY_NULLS_FIELDS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UI_INHERITANCE_UNSAFE_GETRESOURCE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IMSE_DONT_CATCH_IMSE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_SELF_USE_OBJECT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FI_EXPLICIT_INVOCATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_RUN_FINALIZERS_ON_EXIT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DP_DO_INSIDE_DO_PRIVILEGED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_METHOD_MUST_BE_PRIVATE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_COMPARETO_USE_OBJECT_EQUALS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_TOSTRING_COULD_RETURN_NULL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_NONLONG_SERIALVERSIONID</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FI_EMPTY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NS_NON_SHORT_CIRCUIT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FI_USELESS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FI_FINALIZER_NULLS_FIELDS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_COMPARATOR_SHOULD_BE_SERIALIZABLE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DE_MIGHT_DROP</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FI_MISSING_SUPER_CALL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_METHOD_NAMING_CONVENTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HE_INHERITS_EQUALS_USE_HASHCODE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BitSignedCheck</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_NO_SERIALVERSIONID</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ReturnValueIgnoredBadPractice</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_FIELD_NAMING_CONVENTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_NO_SUITABLE_CONSTRUCTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_BAD_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CN_IDIOM_NO_SUPER_CALL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CO_SELF_NO_OBJECT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_INNER_CLASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BooleanMethodReturnsNull</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RR_NOT_CHECKED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CN_IDIOM</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_EXIT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_RANDOM_USED_ONLY_ONCE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ISC_INSTANTIATE_STATIC_CLASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DE_MIGHT_IGNORE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_TRANSIENT_FIELD_NOT_RESTORED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_NONFINAL_SERIALVERSIONID</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SW_SWING_METHODS_INVOKED_IN_SWING_THREAD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IT_NO_SUCH_ELEMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HE_EQUALS_NO_HASHCODE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_CLASS_NOT_EXCEPTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HE_HASHCODE_NO_EQUALS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_CLONE_COULD_RETURN_NULL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_NONSTATIC_SERIALVERSIONID</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AM_CREATES_EMPTY_JAR_FILE_ENTRY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_CONFUSING</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_CLASS_NAMING_CONVENTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FI_NULLIFY_SUPER</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>61dbaf7c-a355-4c70-8773-5a674d918f48</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Java Logging Rules</name>
        <info>
			The Java Logging ruleset contains a collection of rules that
			find questionable usages of the logger.
		</info>
        <filter>
            <type>GuardDebugLogging</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidPrintStackTrace</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MoreThanOneLogger</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SystemPrintln</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LoggerIsNotStaticFinal</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>6e58ba42-e673-47c2-aff0-1b4c2e33a1e5</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Code Size Rules</name>
        <info>
			The Code Size Ruleset contains a collection of rules that
			find code size related problems.
		</info>
        <filter>
            <type>TooManyFields</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ExcessiveMethodLength</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NcssMethodCount</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NcssTypeCount</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NcssConstructorCount</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CyclomaticComplexity</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ExcessiveClassLength</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ExcessivePublicCount</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NPathComplexity</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ExcessiveParameterList</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TooManyMethods</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>6fb556f3-5b98-450d-acf0-ee761155a7da</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Import Statement Rules</name>
        <info>
			These rules deal with different problems that can occur with
			a class' import statements.
		</info>
        <filter>
            <type>UnnecessaryFullyQualifiedName</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnusedImports</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TooManyStaticImports</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DuplicateImports</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DontImportJavaLang</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>70199f05-dc5a-4b91-a9fc-ba0d17c9b707</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Basic Rules</name>
        <info>
			The Basic Ruleset contains a collection of good practices
			which everyone should follow.
		</info>
        <filter>
            <type>DontCallThreadRun</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EmptyInitializer</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ExtendsObject</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CheckSkipResult</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidBranchingStatementAsLastInLoop</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DontUseFloatTypeForLoopIndices</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>EmptyIfStmt</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EmptySwitchStatements</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>JumbledIncrementer</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnusedNullCheckInEquals</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EmptyWhileStmt</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ForLoopShouldBeWhileLoop</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EmptyTryBlock</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnnecessaryFinalModifier</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidThreadGroup</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EmptyCatchBlock</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidUsingOctalValues</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BigIntegerInstantiation</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BrokenNullCheck</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CheckResultSet</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CollapsibleIfStatements</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidMultipleUnaryOperators</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UselessOverridingMethod</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ReturnFromFinallyBlock</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnnecessaryReturn</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidUsingHardCodedIP</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UselessOperationOnImmutable</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EmptyStatementNotInLoop</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EmptyFinallyBlock</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidDecimalLiteralsInBigDecimalConstructor</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnconditionalIfStatement</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>8e461557-1ca9-41c5-a01a-7569fabe612d</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>J2EE Rules</name>
        <info>These are rules for J2EE</info>
        <filter>
            <type>LocalInterfaceSessionNamingConvention</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseProperClassLoader</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RemoteSessionInterfaceNamingConvention</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RemoteInterfaceNamingConvention</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MDBAndSessionBeanNamingConvention</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>StaticEJBFieldShouldBeFinal</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LocalHomeNamingConvention</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DoNotUseThreads</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>90d074fb-b020-48f8-ae62-b3b64205b8f6</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Migration Rules</name>
        <info>
			Contains rules about migrating from one JDK version to
			another. Don't use these rules directly, rather, use a
			wrapper ruleset such as migrating_to_13.xml.
		</info>
        <filter>
            <type>JUnit4TestShouldUseAfterAnnotation</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>JUnit4TestShouldUseBeforeAnnotation</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ReplaceEnumerationWithIterator</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>JUnit4SuitesShouldUseSuiteAnnotation</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ReplaceHashtableWithMap</type>
            <filtered>false</filtered>
        </filter>

        <filter>
            <type>JUnit4TestShouldUseTestAnnotation</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>9881c032-6681-49e3-87cd-a704f42a477f</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Correctness</name>
        <info>
			Probable bug - an apparent coding mistake resulting in code
			that was probably not what the developer intended. We strive
			for a low false positive rate.
		</info>
        <filter>
            <type>DMI_DOH</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ICAST_INT_2_LONG_AS_INSTANT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>INT_BAD_COMPARISON_WITH_INT_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_ARGUMENTS_WRONG_ORDER</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CO_COMPARETO_RESULTS_MIN_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FB_UNEXPECTED_WARNING</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FB_MISSING_EXPECTED_WARNING</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_BAD_CONVERSION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_BAD_ARGUMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_MISSING_ARGUMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_ILLEGAL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BIT_ADD_OF_SIGNED_BYTE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_INVOKING_HASHCODE_ON_ARRAY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_VACUOUS_SELF_COLLECTION_CALL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RpC_REPEATED_CONDITIONAL_TEST</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MWN_MISMATCHED_NOTIFY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MWN_MISMATCHED_WAIT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EC_NULL_ARG</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_OPTIONAL_RETURN_NULL</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DLS_DEAD_LOCAL_INCREMENT_IN_RETURN</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SIC_THREADLOCAL_DEADLY_EMBRACE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_CLOSING_NULL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EC_INCOMPATIBLE_ARRAY_COMPARE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_IMPOSSIBLE_DOWNCAST</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IM_MULTIPLYING_RESULT_OF_IREM</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>WrongPackage</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BIT_AND_ZZ</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_NONNULL_PARAM_VIOLATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>INT_BAD_COMPARISON_WITH_SIGNED_BYTE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_INVOKING_TOSTRING_ON_ARRAY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FormatStringArgsMismatch</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_RETURN_VALUE_IGNORED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MF_METHOD_MASKS_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EqualsDoesntOverrideInherited</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RE_POSSIBLE_UNINTENDED_PATTERN</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FL_MATH_USING_FLOAT_PRECISION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DeadStoreOfClassLiteral</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IL_INFINITE_RECURSIVE_LOOP</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_NULL_PARAM_DEREF_NONVIRTUAL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VR_UNRESOLVABLE_REFERENCE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_01_TO_INT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IJU_TEARDOWN_NO_SUPER</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ExceptionNotThrown</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IJU_SUITE_NOT_STATIC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DLS_DEAD_LOCAL_STORE_IN_RETURN</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_STORE_INTO_NONNULL_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>STI_INTERRUPTED_ON_CURRENTTHREAD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MaybeSourceValueReachesNeverSink</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IJU_SETUP_NO_SUPER</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_ARGUMENT_MIGHT_BE_NULL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_UNUSUAL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UWF_NULL_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UWF_UNWRITTEN_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_ALWAYS_NULL_EXCEPTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EC_BAD_ARRAY_COMPARE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MF_CLASS_MASKS_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SA_LOCAL_SELF_COMPARISON</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BIT_AND</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_DONT_JUST_NULL_CHECK_READLINE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BAC_BAD_APPLET_CONSTRUCTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AppendingToObjectOutputStream</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SQL_BAD_PREPARED_STATEMENT_ACCESS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_PRIVATE_READ_RESOLVE_NOT_INHERITED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AlwaysValueUsedWhereNeverRequired</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_BAD_MONTH</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RC_REF_COMPARISON</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IJU_BAD_SUITE_METHOD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BRSA_BAD_RESULTSET_ACCESS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DLS_OVERWRITTEN_INCREMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SA_LOCAL_SELF_COMPUTATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UR_UNINIT_READ</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_IMPOSSIBLE_CAST_PRIMITIVE_ARRAY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_ALWAYS_TRUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BIT_IOR_OF_SIGNED_BYTE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_IMPOSSIBLE_CAST</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IL_INFINITE_LOOP</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_IMPOSSIBLE_INSTANCEOF</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_METHOD_CONSTRUCTOR_CONFUSION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>GC_UNRELATED_TYPES</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BIT_IOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_ALWAYS_NULL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HE_USE_OF_UNHASHABLE_CLASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_ALWAYS_FALSE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_LCASE_TOSTRING</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_NULL_INSTANCEOF</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MaybeSourceValueReachesAlwaysSink</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_ABSOLUTE_VALUE_OF_RANDOM_INT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_NULL_ON_SOME_PATH</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_CALLING_NEXT_FROM_HASNEXT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IL_CONTAINER_ADDED_TO_ITSELF</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_GETCLASS_AND_CLASS_CONSTANT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BOA_BADLY_OVERRIDDEN_ADAPTER</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NS_DANGEROUS_NON_SHORT_CIRCUIT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EC_UNRELATED_TYPES</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_GUARANTEED_DEREF</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SuspiciousHashcodeMethodName</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SIO_SUPERFLUOUS_INSTANCEOF</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>INT_BAD_REM_BY_1</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IJU_NO_TESTS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SE_READ_RESOLVE_IS_STATIC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>STI_INTERRUPTED_ON_UNKNOWNTHREAD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_DONT_DEFINE_EQUALS_FOR_ENUM</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EC_ARRAY_AND_NONARRAY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NeverValueUsedWhereAlwaysRequired</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_NONNULL_RETURN_VIOLATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnrelatedTypesUsingPointerEquality</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EQ_COMPARING_CLASS_NAMES</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ICAST_BAD_SHIFT_AMOUNT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_ABSOLUTE_VALUE_OF_HASHCODE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NM_VERY_CONFUSING</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>af53a1fd-bd99-4afd-a0d0-8a46b250ab13</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Jakarta Commons Logging Rules</name>
        <info>
			The Jakarta Commons Logging ruleset contains a collection of
			rules that find questionable usages of that framework.
		</info>
        <filter>
            <type>UseCorrectExceptionLogging</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ProperLogger</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>GuardLogStatement</type>
            <filtered>false</filtered>
        </filter>        
    </filterSets>
    <filterSets>
        <uid>b52a2ac5-751e-4d1a-a93a-872fa6b82103</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Braces Rules</name>
        <info>
			The Braces Ruleset contains a collection of braces rules.
		</info>
        <filter>
            <type>WhileLoopsMustUseBraces</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IfStmtsMustUseBraces</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ForLoopsMustUseBraces</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>b9e4cf3d-36d7-4a55-82d8-0879f29c332d</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Unused Code Rules</name>
        <info>
			The Unused Code Ruleset contains a collection of rules that
			find unused code.
		</info>
        <filter>
            <type>EmptyStatementBlock</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UselessParentheses</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnusedLocalVariable</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UnusedFormalParameter</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>c05606f3-091e-4743-a954-08171c1f5ec5</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Coupling Rules</name>
        <info>
			These are rules which find instances of high or
			inappropriate coupling between objects and packages.
		</info>
        <filter>
            <type>ExcessiveImports</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LooseCoupling</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CouplingBetweenObjects</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LoosePackageCoupling</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LawOfDemeter</type>
            <filtered>false</filtered>
        </filter>        
    </filterSets>
    <filterSets>
        <uid>c27440b2-e83b-4882-8e98-e920fc9a3f43</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Naming Rules</name>
        <info>
			The Naming Ruleset contains a collection of rules about
			names - too long, too short, and so forth.
		</info>
        <filter>
            <type>GenericsNaming</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ShortClassName</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>MisleadingVariableName</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidDollarSigns</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ShortMethodName</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SuspiciousConstantFieldName</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NoPackage</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>PackageCase</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidFieldNameMatchingTypeName</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AbstractNaming</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BooleanGetMethodName</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ShortVariable</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LongVariable</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidFieldNameMatchingMethodName</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>d2816915-3d13-489e-b9a4-8cc9ccf85abc</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>JUnit Rules</name>
        <info>
			These rules deal with different problems that can occur with
			JUnit tests.
		</info>
        <filter>
            <type>JUnitTestContainsTooManyAsserts</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseAssertTrueInsteadOfAssertEquals</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>UnnecessaryBooleanAssertion</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SimplifyBooleanAssertion</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>JUnitSpelling</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>JUnitAssertionsShouldIncludeMessage</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UseAssertNullInsteadOfAssertTrue</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TestClassWithoutTestCases</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>JUnitTestsShouldIncludeAssert</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>d50ebfe7-372c-4a23-bd9c-b9f7665797a9</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Strict Exception Rules</name>
        <info>
			These rules provide some strict guidelines about throwing
			and catching exceptions.
		</info>
        <filter>
            <type>AvoidCatchingGenericException</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidLosingExceptionInformation</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidCatchingNPE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DoNotExtendJavaLangError</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidCatchingThrowable</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SignatureDeclareThrowsException</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidThrowingRawExceptionTypes</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DoNotThrowExceptionInFinally</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ExceptionAsFlowControl</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidThrowingNullPointerException</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidRethrowingException</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>d880d871-a350-4bb3-8b64-d8e53dbcbe80</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Code Duplication</name>
        <info>
			This encompasses various degrees of code duplication, from copy-and-paste 
			to code only differing in variable names or constants
		</info>
        <filter>
            <type>DuplicatedCode</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>dad398d8-c679-4ea3-adbe-5406435ac91b</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Dodgy</name>
        <info>
			Code that is confusing, anomalous, or written in a way that
			leads itself to errors. Examples include dead local stores,
			switch fall through, unconfirmed casts, and redundant null
			check of value known to be null. More false positives
			accepted.
		</info>
        <filter>
            <type>CommentRequired</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CommentSize</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CommentContent</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_RETURN_VALUE_IGNORED_INFERRED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_UNSUPPORTED_METHOD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SKIPPED_CLASS_TOO_BIG</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SA_DOUBLE_ASSIGNMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SA_SELF_ASSIGNMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_UNCONFIRMED_CAST_OF_RETURN_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_METHOD_RETURN_RELAXING_ANNOTATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_METHOD_PARAMETER_RELAXING_ANNOTATION</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DB_DUPLICATE_BRANCHES</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FE_FLOATING_POINT_EQUALITY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_HARDCODED_ABSOLUTE_FILENAME</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>PZLA_PREFER_ZERO_LENGTH_ARRAYS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SF_SWITCH_FALLTHROUGH</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SF_SWITCH_NO_DEFAULT</type>
            <filtered>false</filtered>
        </filter>    
        <filter>
            <type>INT_VACUOUS_BIT_OPERATION</type>
            <filtered>false</filtered>
        </filter>       
        <filter>
            <type>SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CI_CONFUSED_INHERITANCE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IM_BAD_CHECK_FOR_ODD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>REC_CATCH_EXCEPTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_BAD_CAST_TO_ABSTRACT_COLLECTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ICAST_IDIV_CAST_TO_DOUBLE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_REM_OF_HASHCODE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IC_INIT_CIRCULARITY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_NONSERIALIZABLE_OBJECT_WRITTEN</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RI_REDUNDANT_INTERFACES</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UCF_USELESS_CONTROL_FLOW</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>USM_USELESS_ABSTRACT_METHOD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DoesntOverrideEquals</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_LOAD_OF_KNOWN_NULL_VALUE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_CHECK_FOR_POSITIVE_INDEXOF</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_UNCONFIRMED_CAST</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>QF_QUESTIONABLE_FOR_LOOP</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ICAST_INTEGER_MULTIPLY_CAST_TO_LONG</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DB_DUPLICATE_SWITCH_CLAUSES</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>CD_CIRCULAR_DEPENDENCY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>XFB_XML_FACTORY_BYPASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_IMMEDIATE_DEREFERENCE_OF_READLINE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>PS_PUBLIC_SEMAPHORES</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>INT_VACUOUS_COMPARISON</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MTIA_SUSPECT_STRUTS_INSTANCE_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MTIA_SUSPECT_SERVLET_INSTANCE_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DLS_DEAD_LOCAL_STORE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_USELESS_SUBSTRING</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IM_AVERAGE_COMPUTATION_COULD_OVERFLOW</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BC_BAD_CAST_TO_CONCRETE_COLLECTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_REM_OF_RANDOM_INT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DLS_DEAD_LOCAL_STORE_OF_NULL</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>dd9c7397-a3d3-4bd9-92fa-213e0f56af38</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>JavaBean Rules</name>
        <info>
			The JavaBeans Ruleset catches instances of bean rules not
			being followed.
		</info>
        <filter>
            <type>BeanMembersShouldSerialize</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>eb029c7f-e181-49db-be7e-332e1ecd005c</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Multithreaded correctness</name>
        <info>
			Code flaws having to do with threads, locks, and volatiles.
		</info>
        <filter>
            <type>JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VO_VOLATILE_INCREMENT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LI_LAZY_INIT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>JLM_JSR166_LOCK_MONITORENTER</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UL_UNRELEASED_LOCK</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NO_NOTIFY_NOT_NOTIFYALL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>WA_AWAIT_NOT_IN_LOOP</type>
            <filtered>false</filtered>
        </filter>        <filter>
            <type>WA_NOT_IN_LOOP</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>WS_WRITEOBJECT_SYNC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RS_READOBJECT_SYNC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SC_START_IN_CTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>JLM_JSR166_UTILCONCURRENT_MONITORENTER</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>DC_DOUBLECHECK</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_USELESS_THREAD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DL_SYNCHRONIZATION_ON_SHARED_CONSTANT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IS_FIELD_NOT_GUARDED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TLW_TWO_LOCK_WAIT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>LazyInitUpdateStatic</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>RU_INVOKE_RUN</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DL_SYNCHRONIZATION_ON_BOOLEAN</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidCallingSleepWithLockHeld</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ML_SYNC_ON_UPDATED_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UG_SYNC_SET_UNSYNC_GET</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_MONITOR_WAIT_ON_CONDITION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>AvoidStaticCalendar</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ESync_EMPTY_SYNC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>VO_VOLATILE_REFERENCE_TO_ARRAY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MSF_MUTABLE_SERVLET_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>TLW_TWO_LOCK_NOTIFY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IS2_INCONSISTENT_SYNC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NP_SYNC_AND_NULL_CHECK_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>NN_NAKED_NOTIFY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UW_UNCOND_WAIT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SP_SPIN_ON_FIELD</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>ef2994d1-1588-41bd-abc1-1c7a1527cc71</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Malicious code vulnerability</name>
        <info>
			Code that is vulnerable to attacks from untrusted code
		</info>
		<filter>
            <type>MS_SHOULD_BE_REFACTORED_TO_BE_FINAL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_CONSTANT_DB_PASSWORD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EI_EXPOSE_REP</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MS_FINAL_PKGPROTECT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HRS_REQUEST_PARAMETER_TO_COOKIE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MS_OOI_PKGPROTECT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EI_EXPOSE_REP2</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>EI_EXPOSE_STATIC_REP2</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MS_MUTABLE_ARRAY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>XSS_REQUEST_PARAMETER_TO_SEND_ERROR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HRS_REQUEST_PARAMETER_TO_HTTP_HEADER</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HttpParameterWrittenToJSP</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MS_MUTABLE_HASHTABLE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MS_CANNOT_BE_FINAL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_EMPTY_DB_PASSWORD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MS_EXPOSE_REP</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MS_PKGPROTECT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>MS_SHOULD_BE_FINAL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>FI_PUBLIC_SHOULD_BE_PROTECTED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HttpParameterWrittenToServlet</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
    <filterSets>
        <uid>f89d25b2-f3b2-4575-a982-8fe03d910644</uid>
        <owner>9a997ac4-ec2b-4d02-869a-423999fecfed</owner>
        <revision>0</revision>
        <name>Performance</name>
        <info>
			Code that is not necessarily incorrect but may be
			inefficient.
		</info>
        <filter>
            <type>BX_UNBOXING_IMMEDIATELY_REBOXED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UUF_UNUSED_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IIO_INEFFICIENT_INDEX_OF</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IIO_INEFFICIENT_LAST_INDEX_OF</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_BOXED_PRIMITIVE_FOR_PARSING</type>
            <filtered>false</filtered>
        </filter>		
        <filter>
            <type>URF_UNREAD_FIELD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>WMI_WRONG_MAP_ITERATOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>HSC_HUGE_SHARED_STRING_CONSTANT</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_NEW_FOR_GETCLASS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_STRING_TOSTRING</type>
            <filtered>false</filtered>
        </filter>
        <!--filter>
            <type>DM_STRING_EMPTY_EQUALS</type>
            <filtered>false</filtered>
        </filter> -->
        <filter>
            <type>UseStringBufferForStringAppends</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_BLOCKING_METHODS_ON_URL</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_NEXTINT_VIA_NEXTDOUBLE</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_STRING_CTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UM_UNNECESSARY_MATH</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DMI_COLLECTION_OF_URLS</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SS_SHOULD_BE_STATIC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_BOXED_PRIMITIVE_TOSTRING</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>UPM_UNCALLED_PRIVATE_METHOD</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_NUMBER_CTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_BOOLEAN_CTOR</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>BX_BOXING_IMMEDIATELY_UNBOXED</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>SIC_INNER_SHOULD_BE_STATIC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>ITA_INEFFICIENT_TO_ARRAY</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>DM_GC</type>
            <filtered>false</filtered>
        </filter>
        <filter>
            <type>IMA_INEFFICIENT_MEMBER_ACCESS</type>
            <filtered>false</filtered>
        </filter>
    </filterSets>
</listCategoryResponse>


		    
